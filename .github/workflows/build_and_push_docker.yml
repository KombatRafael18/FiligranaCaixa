name: Create and publish a Docker image

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Para tags no formato sem√¢ntico, como 1.0.0, 2.1.3
      - '*build'                # Para qualquer tag que termine com 'build'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-frontend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend
          tags: type=raw,value={{tag}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:Codigo/frontend"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile

  build-and-push-api-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api
          tags: type=raw,value={{tag}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:Codigo/api"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
