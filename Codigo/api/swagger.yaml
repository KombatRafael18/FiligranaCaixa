openapi: 3.0.0

info:
  title: Filigrana API
  description: Sistema para fechamento de caixa em lojas de semijoias e bijuterias.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Servidor local
  - url: http://localhost:8030
    description: Servidor local no docker
  - url: http://ec2-54-166-180-33.compute-1.amazonaws.com:8030
    description: Servidor de produção

tags:
  - name: products
    description: Operações com produtos

paths:
  /api/products:
    get:
      summary: Retorna os produtos cadastrados
      tags:
        - products
      responses:
        "200":
          description: Sucesso, retorna uma lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Cadastra um novo produto
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreate"
      responses:
        "201":
          description: Sucesso, retorna o produto cadastrado
          headers:
            Location:
              description: URL do novo produto criado
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          $ref: "#/components/responses/BadRequestResponse"

  /api/products/{id}:
    get:
      summary: Retorna um produto específico
      tags:
        - products
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      responses:
        "200":
          description: Sucesso, retorna o produto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
    put:
      summary: Atualiza um produto específico
      tags:
        - products
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductUpdate"
      responses:
        "200":
          description: Sucesso, retorna o produto atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
    delete:
      summary: Deleta um produto específico
      tags:
        - products
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      responses:
        "204":
          description: Sucesso, sem conteúdo
        "404":
          $ref: "#/components/responses/NotFoundResponse"
  
  /api/cash-closure/daily-summary/{date}:
    get:
      summary: Retorna o resumo diário de vendas
      tags:
        - cash-closure
      parameters:
        - name: date
          in: path
          required: true
          description: Data no formato YYYY-MM-DD
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Sucesso, retorna o resumo diário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailySummary"

  /api/cash-closure/close-day:
    post:
      summary: Fecha o caixa do dia
      tags:
        - cash-closure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                moneyCounter:
                  $ref: "#/components/schemas/MoneyCounterCount"
                cashRegisterWithdrawal:
                  type: number
      responses:
        "204":
          description: Sucesso, caixa fechado
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "409":
          $ref: "#/components/responses/ConflictResponse"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number

    ProductCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number

    ProductUpdate:
      allOf:
        - $ref: "#/components/schemas/ProductCreate"

    MoneyCounterItem:
      type: object
      properties:
        count:
          type: integer
        total:
          type: number
    
    MoneyCounter:
      type: object
      properties:
        bill2:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill5:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill10:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill20:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill50:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill100:
          $ref: "#/components/schemas/MoneyCounterItem"
        bill200:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin1:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin5:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin10:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin25:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin50:
          $ref: "#/components/schemas/MoneyCounterItem"
        coin1Real:
          $ref: "#/components/schemas/MoneyCounterItem"
    
    MoneyCounterCountItem:
      type: object
      properties:
        count:
          type: integer
    
    MoneyCounterCount:
      type: object
      properties:
        bill2:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill5:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill10:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill20:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill50:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill100:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        bill200:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin1:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin5:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin10:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin25:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin50:
          $ref: "#/components/schemas/MoneyCounterCountItem"
        coin1Real:
          $ref: "#/components/schemas/MoneyCounterCountItem"

    DailySummary:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        payments:
          type: array
          items:
            type: object
            properties:
              paymentMethod:
                type: string
              amount:
                type: number
        previousDayCashBalance:
          type: object
          properties:
            date:
              type: string
              format: date
            cashBalance:
              type: number
        moneyCounter:
          $ref: "#/components/schemas/MoneyCounter"
        cashRegisterWithdrawal:
          type: number
        cashBalance:
          type: number
        cashAlreadyClosed:
          type: boolean


    ApiError:
      type: object
      properties:
        error:
          type: string

  responses:
    BadRequestResponse:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    NotFoundResponse:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
    
    ConflictResponse:
      description: Conflito
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
